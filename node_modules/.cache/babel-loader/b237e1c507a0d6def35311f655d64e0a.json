{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AffirmationDeck = () => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n\n  async function fetchDeck() {\n    const response = await fetch(\"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\");\n    const data = await response.json();\n    const transformedDeck = [];\n\n    for (const card in data) {\n      transformedDeck.push({\n        id: card.key,\n        affirmation: card.affirmation,\n        mantra: card.mantra,\n        category: card.category\n      });\n    }\n\n    setDeck(transformedDeck);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Virtual Affirmation Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), deck.map(card => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true);\n};\n\n_s(AffirmationDeck, \"h85ghwWFuAZ0QkT43K1tI9U/CM0=\");\n\n_c = AffirmationDeck;\nexport default AffirmationDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffirmationDeck\");","map":{"version":3,"sources":["/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeck.js"],"names":["React","useState","AffirmationDeck","deck","setDeck","fetchDeck","response","fetch","data","json","transformedDeck","card","push","id","key","affirmation","mantra","category","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AACA,iBAAeI,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+EAD0B,CAA5B;AAGA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,eAAe,GAAG,EAAxB;;AACA,SAAK,MAAMC,IAAX,IAAmBH,IAAnB,EAAyB;AACvBE,MAAAA,eAAe,CAACE,IAAhB,CAAqB;AACnBC,QAAAA,EAAE,EAAEF,IAAI,CAACG,GADU;AAEnBC,QAAAA,WAAW,EAAEJ,IAAI,CAACI,WAFC;AAGnBC,QAAAA,MAAM,EAAEL,IAAI,CAACK,MAHM;AAInBC,QAAAA,QAAQ,EAAEN,IAAI,CAACM;AAJI,OAArB;AAMD;;AACDb,IAAAA,OAAO,CAACM,eAAD,CAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,IAAI,CAACe,GAAL,CAAUP,IAAD,iBAAU;AAAA,gBAAIA,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAAnB,CAFH;AAAA,kBADF;AAMD,CAxBD;;GAAMX,e;;KAAAA,e;AA0BN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AffirmationDeck = () => {\n  const [deck, setDeck] = useState([]);\n  async function fetchDeck() {\n    const response = await fetch(\n      \"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\"\n    );\n    const data = await response.json();\n    const transformedDeck = [];\n    for (const card in data) {\n      transformedDeck.push({\n        id: card.key,\n        affirmation: card.affirmation,\n        mantra: card.mantra,\n        category: card.category,\n      });\n    }\n    setDeck(transformedDeck);\n  }\n  return (\n    <>\n      <h1>Virtual Affirmation Deck</h1>\n      {deck.map((card) => <p>{card.id}</p>)}\n    </>\n  );\n};\n\nexport default AffirmationDeck;\n"]},"metadata":{},"sourceType":"module"}