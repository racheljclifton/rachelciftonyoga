{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Documents/rachelcliftonyoga/src/Components/Gallery/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport styles from \"./Gallery.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialListOfImages = [];\nlet listOfImages = [];\n\nconst Gallery = () => {\n  _s();\n\n  const [isShowingPicture, setIsShowingPicture] = useState(false); // const [modalImageSrc, setModalImageSrc] = useState(undefined);\n\n  const [modalMessage, setModalMessage] = useState('');\n\n  const importAll = r => {\n    return r.keys().map(r);\n  };\n\n  initialListOfImages = importAll(require.context(\"../../Images/Yoga/\", false, /\\.(png|jpe?g|svg)$/));\n  listOfImages = initialListOfImages.reverse();\n\n  const caption = fileName => {\n    return fileName.match(/(?:\\/)(?!.*\\/)[^.]*/)[0];\n  };\n\n  const showPictureHandler = event => {\n    setIsShowingPicture(true); // setModalImageSrc(event.target.currentSrc);\n\n    const initialText = caption(event.target.currentSrc);\n    const splitText = initialText.split('%20');\n    splitText.shift();\n    const text = splitText.join(' ');\n    setModalMessage( /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.target.currentSrc,\n        alt: text,\n        className: styles.selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this));\n  };\n\n  const hidePictureHandler = event => {\n    setIsShowingPicture(false); // setModalImageSrc(\"\");\n\n    setModalMessage('');\n  }; // const setMessage = (url, text) => {\n  //   return (\n  //     <Fragment>\n  //       <img src={url} alt={text} className={styles.selected} />\n  //       <p>{text}</p>{\" \"}\n  //     </Fragment>\n  //   );\n  // };\n  // let message; \n  // useEffect(() => {\n  //   if (modalImageSrc) {\n  //     const text = caption(modalImageSrc);\n  //     message = setMessage(modalImageSrc, text);\n  //   }\n  // }, [modalImageSrc]);\n\n\n  const img = (image, index) => {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: showPictureHandler,\n      value: image.default,\n      src: image.default,\n      alt: caption(image.default),\n      className: styles.picture\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rachel's Yoga Adventures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gallery,\n      children: listOfImages.map((image, index) => img(image, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isShowingPicture === true && /*#__PURE__*/_jsxDEV(Modal, {\n      onConfirm: hidePictureHandler,\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"iSNuoO9YCEwZwDh6tsSrnk3SdjU=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/rachel/Documents/rachelcliftonyoga/src/Components/Gallery/Gallery.js"],"names":["React","useState","Fragment","styles","Modal","initialListOfImages","listOfImages","Gallery","isShowingPicture","setIsShowingPicture","modalMessage","setModalMessage","importAll","r","keys","map","require","context","reverse","caption","fileName","match","showPictureHandler","event","initialText","target","currentSrc","splitText","split","shift","text","join","selected","hidePictureHandler","img","image","index","default","picture","gallery"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\n\nimport styles from \"./Gallery.module.css\";\n\nimport Modal from \"../UI/Modal\";\n\nlet initialListOfImages = [];\nlet listOfImages = [];\n\nconst Gallery = () => {\n  const [isShowingPicture, setIsShowingPicture] = useState(false);\n  // const [modalImageSrc, setModalImageSrc] = useState(undefined);\n  const [modalMessage, setModalMessage] = useState('');\n\n  const importAll = (r) => {\n    return r.keys().map(r);\n  };\n\n  initialListOfImages = importAll(\n    require.context(\"../../Images/Yoga/\", false, /\\.(png|jpe?g|svg)$/)\n  );\n\n  listOfImages = initialListOfImages.reverse();\n\n  const caption = (fileName) => {\n    return fileName.match(/(?:\\/)(?!.*\\/)[^.]*/)[0];\n  };\n\n  const showPictureHandler = (event) => {\n    setIsShowingPicture(true);\n    // setModalImageSrc(event.target.currentSrc);\n    \n    const initialText = caption(event.target.currentSrc);\n    const splitText = initialText.split('%20');\n    splitText.shift();\n    const text = splitText.join(' ');\n\n    setModalMessage(      <Fragment>\n      <img src={event.target.currentSrc} alt={text} className={styles.selected} />\n      <p>{text}</p>{\" \"}\n    </Fragment>)\n  };\n\n  const hidePictureHandler = (event) => {\n    setIsShowingPicture(false);\n    // setModalImageSrc(\"\");\n    setModalMessage('');\n  };\n\n  // const setMessage = (url, text) => {\n  //   return (\n  //     <Fragment>\n  //       <img src={url} alt={text} className={styles.selected} />\n  //       <p>{text}</p>{\" \"}\n  //     </Fragment>\n  //   );\n  // };\n\n  // let message; \n  // useEffect(() => {\n  //   if (modalImageSrc) {\n  //     const text = caption(modalImageSrc);\n  //     message = setMessage(modalImageSrc, text);\n  //   }\n  // }, [modalImageSrc]);\n\n  const img = (image, index) => {\n    return (\n      <img\n        key={index}\n        onClick={showPictureHandler}\n        value={image.default}\n        src={image.default}\n        alt={caption(image.default)}\n        className={styles.picture}\n      />\n    );\n  };\n\n  return (\n    <>\n      <header>\n        <h1>Rachel's Yoga Adventures</h1>\n      </header>\n      <div className={styles.gallery}>\n        {listOfImages.map((image, index) => img(image, index))}\n      </div>\n      {isShowingPicture === true && (\n        <Modal onConfirm={hidePictureHandler} message={modalMessage} />\n      )}\n    </>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}