{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeckForm/Shuffle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport DeckContext from \"../../../store/deck-context\";\nimport Button from '../../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shuffle = props => {\n  _s();\n\n  const [shuffleValue, setShuffleValue] = useState(1);\n  const ctx = useContext(DeckContext);\n\n  const submitShuffleHandler = event => {\n    event.preventDefault();\n    ctx.onShuffle(shuffleValue);\n    props.onShuffle(\"draw\");\n  };\n\n  const setShuffleHandler = event => {\n    setShuffleValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitShuffleHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"shuffle\",\n      children: \"How many times would you like to shuffle the deck?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: setShuffleHandler,\n      id: \"shuffle\",\n      type: \"number\",\n      min: \"1\",\n      max: \"10\",\n      value: shuffleValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Shuffle, \"624lCbYKDXUPtRRVb767jHD3Sik=\");\n\n_c = Shuffle;\nexport default Shuffle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shuffle\");","map":{"version":3,"sources":["/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeckForm/Shuffle.js"],"names":["React","useState","useContext","DeckContext","Button","Shuffle","props","shuffleValue","setShuffleValue","ctx","submitShuffleHandler","event","preventDefault","onShuffle","setShuffleHandler","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAMQ,GAAG,GAAGP,UAAU,CAACC,WAAD,CAAtB;;AAEA,QAAMO,oBAAoB,GAAIC,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACC,cAAN;AAEAH,IAAAA,GAAG,CAACI,SAAJ,CAAcN,YAAd;AACAD,IAAAA,KAAK,CAACO,SAAN,CAAgB,MAAhB;AACD,GALD;;AAOA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACnCH,IAAAA,eAAe,CAACG,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEN,oBAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,QAAQ,EAAEI,iBAAjB;AAAoC,MAAA,EAAE,EAAC,SAAvC;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAA+D,MAAA,GAAG,EAAC,GAAnE;AAAuE,MAAA,GAAG,EAAC,IAA3E;AAAgF,MAAA,KAAK,EAAEP;AAAvF;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxBD;;GAAMF,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport DeckContext from \"../../../store/deck-context\";\n\nimport Button from '../../UI/Button';\n\nconst Shuffle = (props) => {\n  const [shuffleValue, setShuffleValue] = useState(1)\n\n  const ctx = useContext(DeckContext);\n\n  const submitShuffleHandler = (event) => {\n    event.preventDefault();\n\n    ctx.onShuffle(shuffleValue);\n    props.onShuffle(\"draw\");\n  };\n\n  const setShuffleHandler = (event) => {\n    setShuffleValue(event.target.value);\n  }\n  return (\n    <form onSubmit={submitShuffleHandler}>\n      <label htmlFor=\"shuffle\">\n        How many times would you like to shuffle the deck?\n      </label>\n      <input onChange={setShuffleHandler} id=\"shuffle\" type=\"number\" min=\"1\" max=\"10\" value={shuffleValue} />\n      <Button type=\"submit\">Shuffle</Button>\n    </form>\n  );\n};\n\nexport default Shuffle;\n"]},"metadata":{},"sourceType":"module"}