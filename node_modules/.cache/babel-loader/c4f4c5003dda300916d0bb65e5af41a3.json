{"ast":null,"code":"var _jsxFileName = \"/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AffirmationDeck = () => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    fetch(\"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Sorry! There was an issue accessing the Virtual Affirmation Deck.\");\n      }\n\n      return response.json();\n    }).then(data => {\n      const transformedDeck = [];\n\n      for (const key in data) {\n        transformedDeck.push({\n          id: key,\n          affirmation: data[key].affirmation,\n          mantra: data[key].mantra,\n          category: data[key].category\n        });\n      }\n\n      setDeck(transformedDeck);\n    }).catch(error => setError(error.message)); // try {\n    //   const response = await fetch(\n    //     \"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\"\n    //   );\n    //   const data = await response.json();\n    //   if (!response.ok) {\n    //     throw new error(\n    //       \"Sorry! There was an issue accessing the Virtual Affirmation Deck.\"\n    //     );\n    //   }\n    //   const transformedDeck = [];\n    //   for (const key in data) {\n    //     transformedDeck.push({\n    //       id: key,\n    //       affirmation: data[key].affirmation,\n    //       mantra: data[key].mantra,\n    //       category: data[key].category,\n    //     });\n    //   }\n    //   setDeck(transformedDeck);\n    // } catch (newError) {\n    //   setError(newError.message);\n    // }\n\n    setIsLoading(false);\n  }, []);\n  let content;\n\n  if (deck.length > 0) {\n    console.log(\"deck\");\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: deck.map(card => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.id\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n  if (error) {\n    console.log(error);\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    console.log(\"loading\");\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Virtual Affirmation Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true);\n};\n\n_s(AffirmationDeck, \"fbgVnQatp8ZpObugJoBPc+9ENeI=\");\n\n_c = AffirmationDeck;\nexport default AffirmationDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffirmationDeck\");","map":{"version":3,"sources":["/Users/rachel/Documents/rachelcliftonyoga/src/Components/AffirmationDeck/AffirmationDeck.js"],"names":["React","useEffect","useState","AffirmationDeck","deck","setDeck","isLoading","setIsLoading","error","setError","fetch","then","response","ok","Error","json","data","transformedDeck","key","push","id","affirmation","mantra","category","catch","message","content","length","console","log","map","card"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,IAAAA,KAAK,CACH,+EADG,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CACJ,mEADI,CAAN;AAGD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KAVH,EAWGJ,IAXH,CAWSK,IAAD,IAAU;AAEd,YAAMC,eAAe,GAAG,EAAxB;;AACA,WAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,QAAAA,eAAe,CAACE,IAAhB,CAAqB;AACnBC,UAAAA,EAAE,EAAEF,GADe;AAEnBG,UAAAA,WAAW,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,WAFJ;AAGnBC,UAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI,MAHC;AAInBC,UAAAA,QAAQ,EAAEP,IAAI,CAACE,GAAD,CAAJ,CAAUK;AAJD,SAArB;AAMD;;AACDlB,MAAAA,OAAO,CAACY,eAAD,CAAP;AACD,KAvBH,EAwBGO,KAxBH,CAwBUhB,KAAD,IAAWC,QAAQ,CAACD,KAAK,CAACiB,OAAP,CAxB5B,EAHc,CA8BZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACFlB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAtDQ,EAsDN,EAtDM,CAAT;AAwDA,MAAImB,OAAJ;;AAEA,MAAItB,IAAI,CAACuB,MAAL,GAAc,CAAlB,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,OAAO,gBACL;AAAA,gBACGtB,IAAI,CAAC0B,GAAL,CAAUC,IAAD,iBACR;AAAA,kBAAkBA,IAAI,CAACX;AAAvB,SAAQW,IAAI,CAACX,EAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAOD;;AACD,MAAIZ,KAAJ,EAAW;AACToB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACAkB,IAAAA,OAAO,gBAAG;AAAA,gBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,MAAIF,SAAJ,EAAe;AACbsB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,OAFH;AAAA,kBADF;AAMD,CAxFD;;GAAMvB,e;;KAAAA,e;AA0FN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState} from \"react\";\n\nconst AffirmationDeck = () => {\n  const [deck, setDeck] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(null);\n    fetch(\n      \"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\"\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\n            \"Sorry! There was an issue accessing the Virtual Affirmation Deck.\"\n          );\n        }\n        return response.json();\n      })\n      .then((data) => {\n\n        const transformedDeck = [];\n        for (const key in data) {\n          transformedDeck.push({\n            id: key,\n            affirmation: data[key].affirmation,\n            mantra: data[key].mantra,\n            category: data[key].category,\n          });\n        }\n        setDeck(transformedDeck);\n      })\n      .catch((error) => setError(error.message));\n\n\n      // try {\n      //   const response = await fetch(\n      //     \"https://rachel-clifton-yoga-default-rtdb.firebaseio.com/affirmation-deck.json\"\n      //   );\n      //   const data = await response.json();\n      //   if (!response.ok) {\n      //     throw new error(\n      //       \"Sorry! There was an issue accessing the Virtual Affirmation Deck.\"\n      //     );\n      //   }\n      //   const transformedDeck = [];\n      //   for (const key in data) {\n      //     transformedDeck.push({\n      //       id: key,\n      //       affirmation: data[key].affirmation,\n      //       mantra: data[key].mantra,\n      //       category: data[key].category,\n      //     });\n      //   }\n      //   setDeck(transformedDeck);\n      // } catch (newError) {\n      //   setError(newError.message);\n      // }\n    setIsLoading(false);\n  }, []);\n\n  let content;\n\n  if (deck.length > 0) {\n    console.log(\"deck\");\n    content = (\n      <>\n        {deck.map((card) => (\n          <p key={card.id}>{card.id}</p>\n        ))}\n      </>\n    );\n  }\n  if (error) {\n    console.log(error);\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    console.log(\"loading\");\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <h1>Virtual Affirmation Deck</h1>\n      {content}\n    </>\n  );\n};\n\nexport default AffirmationDeck;\n"]},"metadata":{},"sourceType":"module"}